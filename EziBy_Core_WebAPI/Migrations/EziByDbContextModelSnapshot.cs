// <auto-generated />
using EziBy_Core_WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EziBy_Core_WebAPI.Migrations
{
    [DbContext(typeof(EziByDbContext))]
    partial class EziByDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchLandPhone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchMobile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("BranchId");

                    b.HasIndex("BranchId")
                        .IsUnique();

                    b.HasIndex("BranchName")
                        .IsUnique();

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Setup", b =>
                {
                    b.Property<int>("SetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetupId"));

                    b.Property<string>("AboutUsUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowDiscountInPOS")
                        .HasColumnType("bit");

                    b.Property<int>("Android_BuildNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Android_ForceUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("Android_OnGoingMaintenance")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BrandImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("CategoryHeaderUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("CategoryImagesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("ContactUsUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("CurrencyDecimals")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyMark")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("CyrstalReportPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("InitialDeliveryDays")
                        .HasColumnType("int");

                    b.Property<string>("ItemsImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("MainAPIUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("MainSlideShowImagesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("MaximumDeliveryDays")
                        .HasColumnType("int");

                    b.Property<int>("NewOrderRefreshInterval")
                        .HasColumnType("int");

                    b.Property<string>("OtherImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OurServicesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("PrivacyPolicyUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("ServerMappedImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("SocialMediaUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("SubCategoryImagesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("TermsAndConditionsUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.HasKey("SetupId");

                    b.HasIndex("BranchId", "Active")
                        .IsUnique();

                    b.ToTable("Setups");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Setup", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Setups")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Branch", b =>
                {
                    b.Navigation("Setups");
                });
#pragma warning restore 612, 618
        }
    }
}
