// <auto-generated />
using System;
using EziBy_Core_WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EziBy_Core_WebAPI.Migrations
{
    [DbContext(typeof(EziByDbContext))]
    partial class EziByDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Advertisement", b =>
                {
                    b.Property<int>("AdvertisementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdvertisementId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AdvertisementImage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("AdvertisementLink")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("PhoneNumber2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Slogan")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar");

                    b.HasKey("AdvertisementId");

                    b.HasIndex("BranchId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchLandPhone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchMobile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("BranchId");

                    b.HasIndex("BranchId")
                        .IsUnique();

                    b.HasIndex("BranchName")
                        .IsUnique();

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BrandImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("DisplayableInMobileApp")
                        .HasColumnType("bit");

                    b.HasKey("BrandId");

                    b.HasIndex("BranchId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CarouselImage", b =>
                {
                    b.Property<int>("CarouselId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarouselId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CarouselDetails")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("CarouselImageName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("CarouselLink")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("CarouselType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("CarouselId");

                    b.HasIndex("BranchId");

                    b.ToTable("CarouselImages");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryHeaderImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CategoryId");

                    b.HasIndex("BranchId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastLogged")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("GuestId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<bool>("IsGuestMode")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<bool>("PhoneVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("SubscribedForNewsLetters")
                        .HasColumnType("bit");

                    b.Property<bool>("Suspended")
                        .HasColumnType("bit");

                    b.Property<string>("SuspendedReason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.HasKey("ClientId");

                    b.HasIndex("BranchId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("CustomerId");

                    b.HasIndex("BranchId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPaymentMain", b =>
                {
                    b.Property<int>("CustomerPaymentMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerPaymentMainId"));

                    b.Property<decimal>("BankTransferAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankTransferReference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<decimal>("CardAmex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CardMaster")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CardVisa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChequeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("ChequeValueDate")
                        .HasColumnType("date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modified_UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Prepared_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Prepared_UserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.HasKey("CustomerPaymentMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Modified_UserId");

                    b.HasIndex("Prepared_UserId");

                    b.ToTable("CustomerPaymentMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPaymentSub", b =>
                {
                    b.Property<int>("CustomerPaymentSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerPaymentSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerPaymentMainId")
                        .HasColumnType("int");

                    b.Property<int>("PosMainId")
                        .HasColumnType("int");

                    b.Property<decimal>("SettledAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CustomerPaymentSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerPaymentMainId");

                    b.HasIndex("PosMainId");

                    b.ToTable("CustomerPaymentSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPointRedeem", b =>
                {
                    b.Property<int>("RedeepmedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RedeepmedId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PointsRedeemped")
                        .HasColumnType("int");

                    b.Property<DateTime>("RedeepedDate")
                        .HasColumnType("datetime");

                    b.HasKey("RedeepmedId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerPointRedeems");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.DeliveryCity", b =>
                {
                    b.Property<int>("DeliveryCityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryCityId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryCharge")
                        .HasColumnType("money");

                    b.Property<string>("DeliveryCityName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("DeliveryCityId");

                    b.HasIndex("BranchId");

                    b.ToTable("DeliveryCities");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.DeliveryTime", b =>
                {
                    b.Property<int>("DeliveryTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryTimeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryTimeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("DeliveryTimeId");

                    b.HasIndex("BranchId");

                    b.ToTable("DeliveryTimes");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnMain", b =>
                {
                    b.Property<int>("GrnMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrnMainId"));

                    b.Property<decimal>("AdditionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GrnDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modified_UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Posted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Prepared_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Prepared_UserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SupplierInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierInvoiceNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GrnMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("Modified_UserId");

                    b.HasIndex("Prepared_UserId");

                    b.HasIndex("SupplierId");

                    b.ToTable("GrnMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnReturnMain", b =>
                {
                    b.Property<int>("GrnReturnMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrnReturnMainId"));

                    b.Property<decimal>("AdditionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GrnMainId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GrnReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modified_UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Posted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Prepared_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Prepared_UserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.HasKey("GrnReturnMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("GrnMainId");

                    b.HasIndex("Modified_UserId");

                    b.HasIndex("Prepared_UserId");

                    b.ToTable("GrnReturnMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnReturnSub", b =>
                {
                    b.Property<int>("GrnReturnSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrnReturnSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GrnMainId")
                        .HasColumnType("int");

                    b.Property<int>("GrnReturnMainId")
                        .HasColumnType("int");

                    b.Property<int>("GrnSubId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReturnedQty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("GrnReturnSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("GrnMainId", "GrnSubId");

                    b.HasIndex("GrnReturnMainId", "GrnReturnSubId", "GrnSubId");

                    b.ToTable("GrnReturnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnSub", b =>
                {
                    b.Property<int>("GrnMainId")
                        .HasColumnType("int");

                    b.Property<int>("GrnSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrnSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrnQty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.HasKey("GrnMainId", "GrnSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ItemId", "ItemPriceVariantId");

                    b.HasIndex("GrnMainId", "GrnSubId", "ItemId", "ItemPriceVariantId");

                    b.ToTable("GrnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowFractionInQty")
                        .HasColumnType("bit");

                    b.Property<decimal>("AverageRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryTimeId")
                        .HasColumnType("int");

                    b.Property<string>("Dimension")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<bool>("IsAvailableInMobileApp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailableInPOS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewArrival")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrending")
                        .HasColumnType("bit");

                    b.Property<string>("ItemImage1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("ItemImage2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("ItemImage3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<bool>("NonExchangable")
                        .HasColumnType("bit");

                    b.Property<int>("OneTimePurchasableQty")
                        .HasColumnType("int");

                    b.Property<int>("ReOrderLevel")
                        .HasColumnType("int");

                    b.Property<int>("ReOrderQty")
                        .HasColumnType("int");

                    b.Property<string>("SKUBarcode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<bool>("StopReOrder")
                        .HasColumnType("bit");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TotalClicked")
                        .HasColumnType("int");

                    b.Property<int>("TotalSold")
                        .HasColumnType("int");

                    b.Property<int>("UOMId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("BranchId");

                    b.HasIndex("BrandId");

                    b.HasIndex("DeliveryTimeId");

                    b.HasIndex("ItemName");

                    b.HasIndex("SKUBarcode");

                    b.HasIndex("UOMId");

                    b.HasIndex("CategoryId", "SubCategoryId");

                    b.HasIndex("ItemName", "SKUBarcode");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemPriceVariantId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("MOB_DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MOB_DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("POS_MaxDiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("POS_MaxDiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId", "ItemPriceVariantId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ItemPriceVariantId", "ItemId")
                        .IsUnique();

                    b.ToTable("ItemPriceVariants");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MailSetting", b =>
                {
                    b.Property<int>("MailSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailSettingId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("OrderEmailAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OrderEmailBCCAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OrderEmailCCAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OrderEmailDisplayName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OrderEmailHost")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OrderEmailPassword")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("OrderEmailPortNo")
                        .HasColumnType("int");

                    b.Property<string>("UnsubscribeLink")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.HasKey("MailSettingId");

                    b.HasIndex("BranchId", "Active")
                        .IsUnique();

                    b.ToTable("MailSettings");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MobileOrderMain", b =>
                {
                    b.Property<string>("MobileOrderMainId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<decimal>("DeliveryCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeliveryCityId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryEmail")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar");

                    b.Property<string>("DeliveryFullName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar");

                    b.Property<string>("DeliveryGoogleGeoLocation")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar");

                    b.Property<string>("DeliveryNote")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<string>("DeliveryPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderGUID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderStatusUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaidStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<decimal>("PointAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MobileOrderMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeliveryCityId");

                    b.HasIndex("OrderGUID")
                        .IsUnique();

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("PaidStatusId");

                    b.ToTable("MobileOrderMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MobileOrderSub", b =>
                {
                    b.Property<int>("MobileOrderSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MobileOrderSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountedSellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.Property<string>("MobileOrderMainId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MobileOrderSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("MobileOrderMainId");

                    b.HasIndex("MobileOrderMainId", "MobileOrderSubId");

                    b.HasIndex("ItemId", "ItemPriceVariantId", "OrderStatusId");

                    b.ToTable("MobileOrderSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosMain", b =>
                {
                    b.Property<int>("PosMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosMainId"));

                    b.Property<decimal>("BalanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BankTransferAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankTransferReference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<decimal>("CardAmex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CardMaster")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CardVisa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChequeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("ChequeValueDate")
                        .HasColumnType("date");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modified_UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PermissableFraction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PosDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PosGUID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Prepared_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Prepared_UserId")
                        .HasColumnType("int");

                    b.HasKey("PosMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Modified_UserId");

                    b.HasIndex("PosGUID")
                        .IsUnique();

                    b.HasIndex("Prepared_UserId");

                    b.ToTable("PosMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosReturnMain", b =>
                {
                    b.Property<int>("PosReturnMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosReturnMainId"));

                    b.Property<decimal>("AdditionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("CreditSettledAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modified_UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PosMainId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PosReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PosReturnGUID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Prepared_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Prepared_UserId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<decimal>("RedeemableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Used")
                        .HasColumnType("bit");

                    b.HasKey("PosReturnMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("Modified_UserId");

                    b.HasIndex("PosMainId");

                    b.HasIndex("PosReturnGUID")
                        .IsUnique();

                    b.HasIndex("Prepared_UserId");

                    b.ToTable("PosReturnMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosReturnSub", b =>
                {
                    b.Property<int>("PosReturnSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosReturnSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountedSellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PosMainId")
                        .HasColumnType("int");

                    b.Property<int>("PosReturnMainId")
                        .HasColumnType("int");

                    b.Property<int>("PosSubId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReturnedQty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("PosReturnSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("PosMainId", "PosSubId");

                    b.HasIndex("PosReturnMainId", "PosReturnSubId", "PosSubId");

                    b.ToTable("PosReturnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosSub", b =>
                {
                    b.Property<int>("PosMainId")
                        .HasColumnType("int");

                    b.Property<int>("PosSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountedSellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.Property<decimal>("PosQty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PosMainId", "PosSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ItemId", "ItemPriceVariantId");

                    b.HasIndex("PosMainId", "PosSubId", "ItemId", "ItemPriceVariantId");

                    b.ToTable("PosSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.Property<string>("RatingReview")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("RatingStar")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ItemId", "ItemPriceVariantId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Serial", b =>
                {
                    b.Property<int>("SerialType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerialType"));

                    b.Property<bool>("AddYearPrefix")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterPrefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<int>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<int>("NextSerialNo")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDigitsInSerial")
                        .HasColumnType("int");

                    b.Property<string>("SerialDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("SerialType");

                    b.HasIndex("BranchId");

                    b.ToTable("Serials");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Setup", b =>
                {
                    b.Property<int>("SetupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetupId"));

                    b.Property<string>("AboutUsUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AdvertisementImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<bool>("AllowDiscountInPOS")
                        .HasColumnType("bit");

                    b.Property<int>("Android_BuildNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Android_ForceUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("Android_OnGoingMaintenance")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BrandImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("CategoryHeaderUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("CategoryImagesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("ContactUsUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("CrystalReportPath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("CurrencyDecimals")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyMark")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<int>("InitialDeliveryDays")
                        .HasColumnType("int");

                    b.Property<string>("ItemsImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("MainAPIUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainSlideShowImagesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("MaximumDeliveryDays")
                        .HasColumnType("int");

                    b.Property<int>("NewOrderRefreshInterval")
                        .HasColumnType("int");

                    b.Property<string>("OtherImageUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("OurServicesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("PrivacyPolicyUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("ServerMappedImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("SocialMediaUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("SubCategoryImagesUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("TermsAndConditionsUri")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.HasKey("SetupId");

                    b.HasIndex("BranchId", "Active")
                        .IsUnique();

                    b.ToTable("Setups");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ItemId", "ItemPriceVariantId");

                    b.HasIndex("ClientId", "ItemId", "ItemPriceVariantId")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SubCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("CategoryId", "SubCategoryId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CategoryId", "SubCategoryId")
                        .IsUnique();

                    b.HasIndex("CategoryId", "SubCategoryName")
                        .IsUnique();

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("SupplierId");

                    b.HasIndex("BranchId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SupplierPaymentMain", b =>
                {
                    b.Property<int>("SupplierPaymentMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierPaymentMainId"));

                    b.Property<decimal>("BankTransferAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankTransferReference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<decimal>("CardAmex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CardMaster")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CardVisa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChequeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("ChequeValueDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Modified_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modified_UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Prepared_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Prepared_UserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierPaymentMainId");

                    b.HasIndex("BranchId");

                    b.HasIndex("Modified_UserId");

                    b.HasIndex("Prepared_UserId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierPaymentMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SupplierPaymentSub", b =>
                {
                    b.Property<int>("SupplierPaymentSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierPaymentSubId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("GrnMainId")
                        .HasColumnType("int");

                    b.Property<decimal>("SettledAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierPaymentMainId")
                        .HasColumnType("int");

                    b.HasKey("SupplierPaymentSubId");

                    b.HasIndex("BranchId");

                    b.HasIndex("GrnMainId");

                    b.HasIndex("SupplierPaymentMainId");

                    b.ToTable("SupplierPaymentSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.UOM", b =>
                {
                    b.Property<int>("UOMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UOMId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("UOMFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("UOMName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("UOMId");

                    b.HasIndex("BranchId");

                    b.ToTable("UOMs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar");

                    b.Property<string>("UserGUID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("UserId");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex("UserName", "Password");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ViewedItem", b =>
                {
                    b.Property<int>("ViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ViewId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastViewed")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.Property<int>("ViewedCount")
                        .HasColumnType("int");

                    b.HasKey("ViewId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ItemId", "ItemPriceVariantId");

                    b.HasIndex("ClientId", "ItemId", "ItemPriceVariantId")
                        .IsUnique();

                    b.ToTable("ViewedItems");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.WishList", b =>
                {
                    b.Property<int>("WishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WishListId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPriceVariantId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("WishListId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ItemId", "ItemPriceVariantId");

                    b.HasIndex("ClientId", "ItemId", "ItemPriceVariantId");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Advertisement", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Advertisements")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Brand", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Brands")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CarouselImage", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("CarouselImages")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Category", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Categories")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Client", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Clients")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Customer", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Customers")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPaymentMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("CustomerPaymentMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Customer", "Customer")
                        .WithMany("CustomerPaymentMains")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User1")
                        .WithMany("CustomerPaymentMains1")
                        .HasForeignKey("Modified_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User")
                        .WithMany("CustomerPaymentMains")
                        .HasForeignKey("Prepared_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("User");

                    b.Navigation("User1");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPaymentSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("CustomerPaymentSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.CustomerPaymentMain", "CustomerPaymentMain")
                        .WithMany("CustomerPaymentSubs")
                        .HasForeignKey("CustomerPaymentMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.PosMain", "PosMain")
                        .WithMany("CustomerPaymentSubs")
                        .HasForeignKey("PosMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("CustomerPaymentMain");

                    b.Navigation("PosMain");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPointRedeem", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("CustomerPointRedeems")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Customer", "Customer")
                        .WithMany("CustomerPointRedeems")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.DeliveryCity", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("DeliveryCities")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.DeliveryTime", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("DeliveryTimes")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("GrnMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User1")
                        .WithMany("GrnMains1")
                        .HasForeignKey("Modified_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User")
                        .WithMany("GrnMains")
                        .HasForeignKey("Prepared_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Supplier", "Supplier")
                        .WithMany("GrnMains")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Supplier");

                    b.Navigation("User");

                    b.Navigation("User1");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnReturnMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("GrnReturnMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.GrnMain", "GrnMain")
                        .WithMany("GrnReturnMains")
                        .HasForeignKey("GrnMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User1")
                        .WithMany("GrnReturnMains1")
                        .HasForeignKey("Modified_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User")
                        .WithMany("GrnReturnMains")
                        .HasForeignKey("Prepared_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("GrnMain");

                    b.Navigation("User");

                    b.Navigation("User1");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnReturnSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("GrnReturnSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.GrnMain", "GrnMain")
                        .WithMany("GrnReturnSubs")
                        .HasForeignKey("GrnMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.GrnReturnMain", "GrnReturnMain")
                        .WithMany("GrnReturnSubs")
                        .HasForeignKey("GrnReturnMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.GrnSub", "GrnSub")
                        .WithMany("GrnReturnSubs")
                        .HasForeignKey("GrnMainId", "GrnSubId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("GrnMain");

                    b.Navigation("GrnReturnMain");

                    b.Navigation("GrnSub");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("GrnSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.GrnMain", "GrnMain")
                        .WithMany("GrnSubs")
                        .HasForeignKey("GrnMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("GrnSubs")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("GrnSubs")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("GrnMain");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Item", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Items")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Brand", "Brand")
                        .WithMany("Items")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.DeliveryTime", "DeliveryTime")
                        .WithMany("Items")
                        .HasForeignKey("DeliveryTimeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.UOM", "UOM")
                        .WithMany("Items")
                        .HasForeignKey("UOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.SubCategory", "SubCategory")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId", "SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("DeliveryTime");

                    b.Navigation("SubCategory");

                    b.Navigation("UOM");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("ItemPriceVariants")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("ItemPriceVariants")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MailSetting", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("MailSettings")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MobileOrderMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("MobileOrderMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Client", "Client")
                        .WithMany("MobileOrderMains")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.DeliveryCity", "DeliveryCity")
                        .WithMany("MobileOrderMains")
                        .HasForeignKey("DeliveryCityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("DeliveryCity");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MobileOrderSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("MobileOrderSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("MobileOrderSubs")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.MobileOrderMain", "MobileOrderMain")
                        .WithMany("MobileOrderSubs")
                        .HasForeignKey("MobileOrderMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("MobileOrderSubs")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");

                    b.Navigation("MobileOrderMain");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("PosMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Customer", "Customer")
                        .WithMany("PosMains")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User1")
                        .WithMany("PosMains1")
                        .HasForeignKey("Modified_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User")
                        .WithMany("PosMains")
                        .HasForeignKey("Prepared_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("User");

                    b.Navigation("User1");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosReturnMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("PosReturnMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User1")
                        .WithMany("PosReturnMains1")
                        .HasForeignKey("Modified_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.PosMain", "PosMain")
                        .WithMany("PosReturnMains")
                        .HasForeignKey("PosMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User")
                        .WithMany("PosReturnMains")
                        .HasForeignKey("Prepared_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("PosMain");

                    b.Navigation("User");

                    b.Navigation("User1");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosReturnSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("PosReturnSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.PosMain", "PosMain")
                        .WithMany("PosReturnSubs")
                        .HasForeignKey("PosMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.PosReturnMain", "PosReturnMain")
                        .WithMany("PosReturnSubs")
                        .HasForeignKey("PosReturnMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.PosSub", "PosSub")
                        .WithMany("PosReturnSubs")
                        .HasForeignKey("PosMainId", "PosSubId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("PosMain");

                    b.Navigation("PosReturnMain");

                    b.Navigation("PosSub");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("PosSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("PosSubs")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.PosMain", "PosMain")
                        .WithMany("PosSubs")
                        .HasForeignKey("PosMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("PosSubs")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");

                    b.Navigation("PosMain");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Rating", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Ratings")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Client", "Client")
                        .WithMany("Ratings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("Ratings")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("Ratings")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Serial", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Serials")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Setup", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Setups")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ShoppingCart", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Client", "Client")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SubCategory", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("SubCategories")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Supplier", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Suppliers")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SupplierPaymentMain", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("SupplierPaymentMains")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User1")
                        .WithMany("SupplierPaymentMains1")
                        .HasForeignKey("Modified_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.User", "User")
                        .WithMany("SupplierPaymentMains")
                        .HasForeignKey("Prepared_UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Supplier", "Supplier")
                        .WithMany("SupplierPaymentMains")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Supplier");

                    b.Navigation("User");

                    b.Navigation("User1");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SupplierPaymentSub", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("SupplierPaymentSubs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.GrnMain", "GrnMain")
                        .WithMany("SupplierPaymentSubs")
                        .HasForeignKey("GrnMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.SupplierPaymentMain", "SupplierPaymentMain")
                        .WithMany("SupplierPaymentSubs")
                        .HasForeignKey("SupplierPaymentMainId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("GrnMain");

                    b.Navigation("SupplierPaymentMain");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.UOM", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("UOMs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.User", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ViewedItem", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("ViewedItems")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Client", "Client")
                        .WithMany("ViewedItems")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("ViewedItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("ViewedItems")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.WishList", b =>
                {
                    b.HasOne("EziBy_Core_ClassLibrary.Models.Branch", "Branch")
                        .WithMany("WishLists")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Client", "Client")
                        .WithMany("WishLists")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.Item", "Item")
                        .WithMany("WishLists")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", "ItemPriceVariant")
                        .WithMany("WishLists")
                        .HasForeignKey("ItemId", "ItemPriceVariantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Client");

                    b.Navigation("Item");

                    b.Navigation("ItemPriceVariant");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Branch", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Brands");

                    b.Navigation("CarouselImages");

                    b.Navigation("Categories");

                    b.Navigation("Clients");

                    b.Navigation("CustomerPaymentMains");

                    b.Navigation("CustomerPaymentSubs");

                    b.Navigation("CustomerPointRedeems");

                    b.Navigation("Customers");

                    b.Navigation("DeliveryCities");

                    b.Navigation("DeliveryTimes");

                    b.Navigation("GrnMains");

                    b.Navigation("GrnReturnMains");

                    b.Navigation("GrnReturnSubs");

                    b.Navigation("GrnSubs");

                    b.Navigation("ItemPriceVariants");

                    b.Navigation("Items");

                    b.Navigation("MailSettings");

                    b.Navigation("MobileOrderMains");

                    b.Navigation("MobileOrderSubs");

                    b.Navigation("PosMains");

                    b.Navigation("PosReturnMains");

                    b.Navigation("PosReturnSubs");

                    b.Navigation("PosSubs");

                    b.Navigation("Ratings");

                    b.Navigation("Serials");

                    b.Navigation("Setups");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("SubCategories");

                    b.Navigation("SupplierPaymentMains");

                    b.Navigation("SupplierPaymentSubs");

                    b.Navigation("Suppliers");

                    b.Navigation("UOMs");

                    b.Navigation("Users");

                    b.Navigation("ViewedItems");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Brand", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Category", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Client", b =>
                {
                    b.Navigation("MobileOrderMains");

                    b.Navigation("Ratings");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("ViewedItems");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Customer", b =>
                {
                    b.Navigation("CustomerPaymentMains");

                    b.Navigation("CustomerPointRedeems");

                    b.Navigation("PosMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.CustomerPaymentMain", b =>
                {
                    b.Navigation("CustomerPaymentSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.DeliveryCity", b =>
                {
                    b.Navigation("MobileOrderMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.DeliveryTime", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnMain", b =>
                {
                    b.Navigation("GrnReturnMains");

                    b.Navigation("GrnReturnSubs");

                    b.Navigation("GrnSubs");

                    b.Navigation("SupplierPaymentSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnReturnMain", b =>
                {
                    b.Navigation("GrnReturnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.GrnSub", b =>
                {
                    b.Navigation("GrnReturnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Item", b =>
                {
                    b.Navigation("GrnSubs");

                    b.Navigation("ItemPriceVariants");

                    b.Navigation("MobileOrderSubs");

                    b.Navigation("PosSubs");

                    b.Navigation("Ratings");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("ViewedItems");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.ItemPriceVariant", b =>
                {
                    b.Navigation("GrnSubs");

                    b.Navigation("MobileOrderSubs");

                    b.Navigation("PosSubs");

                    b.Navigation("Ratings");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("ViewedItems");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.MobileOrderMain", b =>
                {
                    b.Navigation("MobileOrderSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosMain", b =>
                {
                    b.Navigation("CustomerPaymentSubs");

                    b.Navigation("PosReturnMains");

                    b.Navigation("PosReturnSubs");

                    b.Navigation("PosSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosReturnMain", b =>
                {
                    b.Navigation("PosReturnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.PosSub", b =>
                {
                    b.Navigation("PosReturnSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SubCategory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.Supplier", b =>
                {
                    b.Navigation("GrnMains");

                    b.Navigation("SupplierPaymentMains");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.SupplierPaymentMain", b =>
                {
                    b.Navigation("SupplierPaymentSubs");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.UOM", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EziBy_Core_ClassLibrary.Models.User", b =>
                {
                    b.Navigation("CustomerPaymentMains");

                    b.Navigation("CustomerPaymentMains1");

                    b.Navigation("GrnMains");

                    b.Navigation("GrnMains1");

                    b.Navigation("GrnReturnMains");

                    b.Navigation("GrnReturnMains1");

                    b.Navigation("PosMains");

                    b.Navigation("PosMains1");

                    b.Navigation("PosReturnMains");

                    b.Navigation("PosReturnMains1");

                    b.Navigation("SupplierPaymentMains");

                    b.Navigation("SupplierPaymentMains1");
                });
#pragma warning restore 612, 618
        }
    }
}
